variables:
  # BF_GIT_FILE: ".bfgit"
  # BF_NETWORK: "af19-demonet"
  # bf_policy_ci_url: ${CI_JOB_URL}
  # BF_SNAPSHOT_DIR: "snapshot"
  # Change pip's cache directory to be inside the project directory since we can
  # only cache local items.
  # PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_CLONE_PATH: /home/gitlab-runner/builds/batfishpipeline

stages:
  - generate

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - venv/

before_script:
  # - python -V               # Print out python version for debugging
  # - virtualenv -p python3 venv
  - source /home/sudarshanv/ansible2.9.6/bin/activate

Generate the configuration:
  stage: generate
  script: 
    - pwd
    - python --version
    # - 'ansible-playbook /home/gitlab-runner/builds/batfishpipeline/ansible-playbooks/generate_config.yaml 
    #   -i /home/gitlab-runner/builds/batfishpipeline/ansible-playbooks/hosts.ini'





# variables:
#   # Change pip's cache directory to be inside the project directory since we can
#   # only cache local items.
#   # PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  

# stages:
#   - generate

# # cache:
# #   paths:
# #     - .cache/pip
# #     - /home/gitlab-runner/ansible2.9.6

# before_script:
#   - source /home/sudarshan/ansible2.9.6/bin/activate
#   - ansible --version
#   - python -V               # Print out python version for debugging


# Generate the configuration:
#   stage: generate
#   script: pwd
    # - ansible-playbook /home/gitlab-runner/builds/batfishpipeline/ansible-playbooks/generate_config.yaml 
    #   -i /home/gitlab-runner/builds/batfishpipeline/ansible-playbooks/hosts.ini
  